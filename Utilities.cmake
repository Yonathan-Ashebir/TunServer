function(printValue)
    foreach (VAR ${ARGN})
        message("${VAR} = ${${VAR}}")
    endforeach ()
endfunction()

# signature: addExternalLibrary(<NAME> [<GIT_REPOSITORY> <GIT_TAG>])
function(addExternalLibrary)
    set(mPkg ${ARGV0})

    find_path(EXTERNAL_DIR ${mPkg}/CMakeLists.txt HINTS ${CMAKE_HOME_DIRECTORY}/external NO_CACHE)
    if (EXTERNAL_DIR)
        add_subdirectory(${EXTERNAL_DIR}/${mPkg} ${CMAKE_BINARY_DIR}/external/${mPkg})
        set(${mPkg}_SOURCE_DIR ${EXTERNAL_DIR}/${mPkg} PARENT_SCOPE)
        set(${mPkg}_FOUND TRUE PARENT_SCOPE)
        return()
    endif ()

    find_package(${mPkg} QUIET)
    if (${mPkg}_FOUND)
        set(${mPkg}_FOUND TRUE PARENT_SCOPE)
        return()
    endif ()


    if (NOT ARGV1 OR NOT ARGV2)
        if (required)
            message(FATAL_ERROR "Could not find library ${mPkg}")
        else ()
            set(${mPkg}_FOUND FALSE PARENT_SCOPE)
            return()
        endif ()
    endif ()
    FetchContent_Declare(${mPkg} GIT_REPOSITORY ${ARGV1} GIT_TAG ${ARGV2})
    FetchContent_MakeAvailable(${mPkg})
    set(${mPkg}_SOURCE_DIR ${${mPkg}_SOURCE_DIR} PARENT_SCOPE)
endfunction()
